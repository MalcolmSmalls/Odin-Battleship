(()=>{"use strict";var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{G:()=>n});const t=()=>{let e=[];return{shipList:e,createCarrier:(t,o)=>{const s=r("carrier",t,o);e.push(s)},createBattleship:(t,o)=>{const s=r("battleship",t,o);e.push(s)},createDestroyer:(t,o)=>{const s=r("destroyer",t,o);e.push(s)},createSubmarine:(t,o)=>{const s=r("submarine",t,o);e.push(s)},createPatrolBoat:(t,o)=>{const s=r("patrol boat",t,o);e.push(s)},createGameboard:()=>s()}},r=(e,t,r)=>{let o=0;const s=()=>t,n=r,i=()=>{o="carrier"===e?5:"battleship"===e?4:"destroyer"===e||"submarine"===e?3:"patrol boat"===e?2:null};i();let a=o;const l=()=>0===a;return{shipSize:o,getType:()=>e,shipSizeGetter:i,health:a,sunk:l,hit:()=>(a-=1,0===a&&l(),a),shipCoordinates:()=>{let e=[];if("horizontal"===s()){let t=Number(n.substring(1));if(!(t-1+o<=10))return;for(let r=t;r<t+o;r++)e.push(`${n.substring(0,1)}${r}`)}else if("vertical"===s()){let t=["A","B","C","D","E","F","G","H","I","J"],r=Number(n.substring(1)),s=n.substring(0,1),i=t.indexOf(s);if(!(i+o<=10))return;for(let s=i;s<i+o;s++)e.push(`${t[s]}${r}`)}return e},getAlignment:s,start:n}},o=[],s=()=>{const e={A1:0,A2:0,A3:0,A4:0,A5:0,A6:0,A7:0,A8:0,A9:0,A10:0,B1:0,B2:0,B3:0,B4:0,B5:0,B6:0,B7:0,B8:0,B9:0,B10:0,C1:0,C2:0,C3:0,C4:0,C5:0,C6:0,C7:0,C8:0,C9:0,C10:0,D1:0,D2:0,D3:0,D4:0,D5:0,D6:0,D7:0,D8:0,D9:0,D10:0,E1:0,E2:0,E3:0,E4:0,E5:0,E6:0,E7:0,E8:0,E9:0,E10:0,F1:0,F2:0,F3:0,F4:0,F5:0,F6:0,F7:0,F8:0,F9:0,F10:0,G1:0,G2:0,G3:0,G4:0,G5:0,G6:0,G7:0,G8:0,G9:0,G10:0,H1:0,H2:0,H3:0,H4:0,H5:0,H6:0,H7:0,H8:0,H9:0,H10:0,I1:0,I2:0,I3:0,I4:0,I5:0,I6:0,I7:0,I8:0,I9:0,I10:0,J1:0,J2:0,J3:0,J4:0,J5:0,J6:0,J7:0,J8:0,J9:0,J10:0};return o.forEach((t=>{t.shipList.forEach((t=>{t.shipCoordinates().forEach((r=>{for(const o in e)o===r&&(e[o]=t)}))}))})),console.log("working"),{coordinates:e,receiveAttack:t=>{for(const r in e)if(r===t){if(0===e[r])return e[r]="X","miss";if("object"!=typeof e[r])return;if(e[r].hit(),!0===e[r].sunk())n.splice(n.indexOf(e[r]),1),console.log(`${e[r].getType()} has been sunk!`),e[r]="HIT",0===n.length&&console.log("you lose!");else if("X"===e[r]||"HIT"===e[r])return"already tried here!"}},letsTry:()=>{console.log("let's goooo")}}},n=t();o.push(n),n.createCarrier("horizontal","A1"),console.log(o[0].createGameboard().coordinates);const i=t();o.push(i),i.createGameboard(),console.log(o)})();